{"version":3,"file":"static/js/868.e725196e.chunk.js","mappings":"mNA8Ce,SAASA,EAAMC,GAC1B,OAAO,SAAC,MAAQ,kBAAKA,GAAK,IAAEC,OAAK,QAC7B,iBAAkB,UAClB,wBAAyB,WACrBD,EAAMC,OAAS,CAAC,GACtB,SACGD,EAAME,WAGf,CAmBA,SAASC,EAASH,GACd,OAAO,gBAAKI,UAAU,gCAA+B,UACjD,SAAC,KAAQ,CAACC,iBAAkBL,EAAMM,OAAS,CAAC,UAAOC,EAAWC,MAAOR,EAAMQ,MAAM,UAC7E,SAAC,WAAc,CAASC,MAAOT,EAAMS,MAAM,SACtCT,EAAMU,aADS,QAKhC,CAxBAX,EAAMY,KAAO,SAAcX,GACvB,MAAmB,aAAfA,EAAMY,MACC,SAAC,WAAa,kBAAKZ,GAAK,IAAES,OAAO,SAACN,GAAQ,QAACK,OAAO,SAACK,EAAA,EAAY,KAASb,IAAoBU,YAAY,OAE5G,SAAC,WAAa,UAAKV,GAC9B,EACAD,EAAMI,SAAWA,E,wBCvDXW,GACF,mBAAOC,OAAQ,EAAGC,YAAa,EAAE,WAC7B,4BACI,2BACI,0CACA,0CACA,0CACA,qDAGR,8BACI,2BACI,yCACA,0FACA,yBACI,2CAEJ,kCAEJ,2BACI,kCACA,wEACA,yBACI,2CAEJ,kCAEJ,2BACI,oCACA,qIACsB,oCAAkB,YAAG,sCAAqB,IAAG,0FAExD,sCAAoB,0HAE/B,yBACI,yEAEJ,yBACI,2CAGR,2BACI,mCACA,0CACA,yBACI,2CAEJ,kCAEJ,2BACI,kCACA,oGACA,wCACA,oFAEJ,2BACI,oCACA,iIACA,qCACA,sCAEJ,2BACI,mCACA,6KACA,uCACA,yFAMD,SAASC,IACpB,OAA8BC,EAAAA,EAAAA,UAAS,GAAE,eAAlCC,EAAO,KACd,GAD0B,MACMD,EAAAA,EAAAA,UAAS,IAAE,eAApCE,EAAQ,KACTC,GADsB,KACT,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACtC,OACI,4BACI,kCAEA,UAAC,EAAK,CACFpB,MAAO,CACH,iBAAkB,MAClB,wBAAyB,SAE7BkB,QAASA,EACTG,UAAU,WAAU,WAEpB,SAAC,EAAAX,KAAU,CAASF,MAAM,gBAAMC,aAAa,4CAA5B,IACjB,SAAC,EAAAC,KAAU,CAASF,MAAM,sCACtBC,YAAaI,EAAYS,MAAM,SAACC,EAAA,EAAoB,KADvC,IAGjB,SAAC,EAAAb,KAAU,CAEPF,OAAO,4DACPH,QAAM,EACNiB,MAAM,SAACE,EAAA,EAAe,IACtBb,KAAK,WACLF,aAAa,sEALR,IAOT,SAAC,EAAAC,KAAU,CAASF,MAAM,iBAAT,MACb,mCAER,gBAAKR,MAAO,CAAEyB,MAAO,UAAW,UAC5B,SAAC,EAAK,CAACzB,MAAO,CACV,aAAc,MACd,gCAAiC,UACjC,wBAAyB,gBACzB,uBAAwB,OACzBkB,QAASC,EAAUE,UAAU,aAAY,SACvCD,EAAWM,KAAI,SAACC,EAAGC,GAAK,OAAK,SAAC,EAAAlB,KAAU,CAACV,MAAO,CAC7C,8BAA8B,sCAAD,OAAwC4B,EAAQR,EAAWS,OAAM,2BAAmBD,EAAQ,GAAKR,EAAWS,OAAM,QACxIrB,MAAK,sBAAOmB,IAAf,EAAsB,UAQlD,C","sources":["pages/myComponents/antdMobile/Steps/step.tsx","pages/myComponents/antdMobile/Steps/index.tsx"],"sourcesContent":["import React from 'react'\r\nimport { StepProps, Steps as AntSteps, StepsProps } from 'antd-mobile'\r\nimport './index.css'\r\nimport { Collapse } from 'antd-mobile'\r\nimport {\r\n    CheckCircleFill,\r\n    ClockCircleFill,\r\n    HandPayCircleOutline,\r\n    RightOutline\r\n} from 'antd-mobile-icons'\r\n\r\nexport type ConchStepsProps = {\r\n    type?: string\r\n    style?: LineColor\r\n} & StepsProps\r\n\r\ntype LineColor = {\r\n    /** 未完成的点的颜色 */\r\n    '--adm-color-background-wait'?: string\r\n    /** 当前的点的颜色 */\r\n    '--adm-color-background-process'?: string\r\n    /** 点的大小 */\r\n    '--dot-size'?: string\r\n    /** 已经完成的点的颜色 */\r\n    '--adm-color-background-finish'?: string\r\n    /** 连线的宽度 */\r\n    '--line-to-next-width'?: string,\r\n    /** 每一根项目连线的颜色 */\r\n    '--line-to-next'?: string | string[]\r\n    /** 每一根已经完成的项目的连线颜色，将覆盖--line-to-next */\r\n    '--line-to-next-finish'?: string | string[]\r\n    /** 每一根项目连线的颜色,background-image */\r\n    '--line-to-next-image'?: string | string[]\r\n    /** 每一根已经完成的项目的连线颜色,background-image，将覆盖--line-to-next */\r\n    '--line-to-next-finish-image'?: string | string[]\r\n}\r\n\r\nexport type ConchStepProps = {\r\n    type?: 'collapse'\r\n    /** type为collapse的时候生效，默认右箭头 */\r\n    arrow?: React.ReactNode | undefined\r\n    /** type为collapse的时候生效，默认不展开 */\r\n    active?: boolean,\r\n    style?: LineColor\r\n} & StepProps\r\n\r\nexport default function Steps(props: ConchStepsProps) {\r\n    return <AntSteps {...props} style={{\r\n        '--line-to-next': '#CDCDCD',//TODO 需要填默认色\r\n        '--line-to-next-finish': '#0067FF',\r\n        ...(props.style || {})\r\n    }}>\r\n        {props.children}\r\n    </AntSteps>\r\n\r\n}\r\n\r\n\r\nSteps.Step = function Step(props: ConchStepProps) {\r\n    if (props.type === 'collapse') {\r\n        return <AntSteps.Step {...props} title={<ColTitle arrow={<RightOutline />} {...props}></ColTitle>} description=''></AntSteps.Step>\r\n    }\r\n    return <AntSteps.Step {...props}></AntSteps.Step>\r\n}\r\nSteps.ColTitle = ColTitle\r\n\r\nexport interface ColTitleProps {\r\n    arrow?: React.ReactNode | ((active: boolean) => React.ReactNode)\r\n    /** 这个项目默认展开 */\r\n    active?: boolean,\r\n    title?: React.ReactNode,\r\n    description?: React.ReactNode\r\n}\r\n\r\nfunction ColTitle(props: ColTitleProps) {\r\n    return <div className='conch-ui-steps-collapse-title'>\r\n        <Collapse defaultActiveKey={props.active ? ['0'] : undefined} arrow={props.arrow}>\r\n            <Collapse.Panel key='0' title={props.title} >\r\n                {props.description}\r\n            </Collapse.Panel>\r\n        </Collapse>\r\n    </div>\r\n}","import React, { useState } from \"react\";\r\nimport { default as Steps } from \"./step\";\r\nimport {\r\n    CheckCircleFill,\r\n    ClockCircleFill,\r\n    HandPayCircleOutline,\r\n    RightOutline,\r\n} from \"antd-mobile-icons\";\r\n\r\nconst StepPropsT = (\r\n    <table border={1} cellSpacing={0}>\r\n        <thead>\r\n            <tr>\r\n                <th>属性</th>\r\n                <th>说明</th>\r\n                <th>类型</th>\r\n                <th>默认值</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td>description</td>\r\n                <td>步骤的详情描述，可选</td>\r\n                <td>\r\n                    <code>ReactNode</code>\r\n                </td>\r\n                <td>-</td>\r\n            </tr>\r\n            <tr>\r\n                <td>icon</td>\r\n                <td>步骤图标的类型</td>\r\n                <td>\r\n                    <code>ReactNode</code>\r\n                </td>\r\n                <td>-</td>\r\n            </tr>\r\n            <tr>\r\n                <td>status</td>\r\n                <td>\r\n                    指定状态。当不配置该属性时，会使用 <code>Steps</code> 的 <code>current</code>{\" \"}\r\n                    来自动指定状态；\r\n                    如果该属性与 <code>current</code> 指定的状态不匹配会覆盖自动匹配的状态。\r\n                </td>\r\n                <td>\r\n                    <code>'wait' | 'process' | 'finish' | 'error'</code>\r\n                </td>\r\n                <td>\r\n                    <code>'wait'</code>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>title</td>\r\n                <td>标题</td>\r\n                <td>\r\n                    <code>ReactNode</code>\r\n                </td>\r\n                <td>-</td>\r\n            </tr>\r\n            <tr>\r\n                <td>type</td>\r\n                <td>为'collapse'的时候表示可以折叠</td>\r\n                <td>'collapse'</td>\r\n                <td>默认undefined，不可折叠</td>\r\n            </tr>\r\n            <tr>\r\n                <td>active</td>\r\n                <td>type为'collapse'的时候生效,表示展开这个项目</td>\r\n                <td>Boolean</td>\r\n                <td>false</td>\r\n            </tr>\r\n            <tr>\r\n                <td>arrow</td>\r\n                <td>为'collapse'的时候生效,默认右箭头,展开的时候顺时针旋转90deg</td>\r\n                <td>ReactNode</td>\r\n                <td>默认undefined，不可折叠</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n);\r\n\r\nexport default function Demo() {\r\n    const [current, setCurrent] = useState(2);\r\n    const [current2, setCurrent2] = useState(5);\r\n    const linearStep = [0, 1, 2, 3, 4, 5, 6]\r\n    return (\r\n        <div>\r\n            <h3>demo</h3>\r\n            {/* @ts-ignore */}\r\n            <Steps\r\n                style={{\r\n                    \"--line-to-next\": \"red\",\r\n                    \"--line-to-next-finish\": \"green\",\r\n                }}\r\n                current={current}\r\n                direction=\"vertical\"\r\n            >\r\n                <Steps.Step key={0} title=\"标题0\" description={<div>描述1</div>} />\r\n                <Steps.Step key={1} title=\"标题1-Steps.Step的props\"\r\n                    description={StepPropsT} icon={<HandPayCircleOutline />} />\r\n\r\n                <Steps.Step\r\n                    key={2}\r\n                    title={<div>可以折叠的</div>}\r\n                    active\r\n                    icon={<ClockCircleFill />}\r\n                    type=\"collapse\"\r\n                    description={<div>type=\"collapse\"可以折叠</div>}\r\n                />\r\n                <Steps.Step key={3} title=\"标题3\" />\r\n            </Steps>\r\n            分割线-------------\r\n            <div style={{ width: '1200px' }}>\r\n                <Steps style={{\r\n                    '--dot-size': '3px',\r\n                    '--adm-color-background-finish': '#FF0000',\r\n                    '--line-to-next-finish': 'rgba(0,0,0,0)',\r\n                    '--line-to-next-width': '3px'\r\n                }} current={current2} direction=\"horizontal\">\r\n                    {linearStep.map((v, index) => <Steps.Step style={{\r\n                        '--line-to-next-finish-image': `linear-gradient(90deg,rgba(255,0,0,${index / linearStep.length}),rgba(255,0,0,${(index + 1) / linearStep.length}) )`\r\n                    }} key={1} title={`标题${v}`} />)}\r\n                </Steps>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n"],"names":["Steps","props","style","children","ColTitle","className","defaultActiveKey","active","undefined","arrow","title","description","Step","type","RightOutline","StepPropsT","border","cellSpacing","Demo","useState","current","current2","linearStep","direction","icon","HandPayCircleOutline","ClockCircleFill","width","map","v","index","length"],"sourceRoot":""}